{"name": "test_admin_new_deal_by_kdt", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: 请填写年利率\nMessage: unexpected alert open: {Alert text : 请填写年利率}\n  (Session info: chrome=114.0.5735.199)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x00CDA813+48355]\n\t(No symbol) [0x00C6C4B1]\n\t(No symbol) [0x00B75358]\n\t(No symbol) [0x00BCCDAD]\n\t(No symbol) [0x00BBA536]\n\t(No symbol) [0x00B982DC]\n\t(No symbol) [0x00B993DD]\n\tGetHandleVerifier [0x00F3AABD+2539405]\n\tGetHandleVerifier [0x00F7A78F+2800735]\n\tGetHandleVerifier [0x00F7456C+2775612]\n\tGetHandleVerifier [0x00D651E0+616112]\n\t(No symbol) [0x00C75F8C]\n\t(No symbol) [0x00C72328]\n\t(No symbol) [0x00C7240B]\n\t(No symbol) [0x00C64FF7]\n\tBaseThreadInitThunk [0x76927D59+25]\n\tRtlInitializeExceptionChain [0x77AEB74B+107]\n\tRtlClearBits [0x77AEB6CF+191]", "trace": "admin_driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8cee9084869f43bc428d7707bf4bae1b\")>\n\n    def test_admin_new_deal_by_kdt(admin_driver):\n        wd = KeyWord(admin_driver)\n        # 点击贷款管理\n        wd.frame_enter('/html/frameset/frame[1]')\n        wd.click('//*[@id=\"navs\"]/ul/li[2]/a')\n        wd.frame_exit()\n    \n        # 点击新增按钮\n        wd.frame_enter('//*[@id=\"main-frame\"]')\n        wd.click('/html/body/div[2]/div[3]/input[1]')\n    \n        # 输入内容\n        # 颜色\n        wd.input('//*[@id=\"colorpickerField\"]', \"f00\")\n        # 借款编号:\n        wd.input('/html/body/div[2]/form/table[1]/tbody/tr[3]/td[2]/input', \"MER202306099527\")\n        # # 贷款名称:\n        wd.input('/html/body/div[2]/form/table[1]/tbody/tr[4]/td[2]/input', \"需要1个小目标：1E\")\n        # # 简短名称:\n        wd.input('/html/body/div[2]/form/table[1]/tbody/tr[5]/td[2]/input', \"一个亿\")\n        # 会员名称:\n        wd.input('/html/body/div[2]/form/table[1]/tbody/tr[6]/td[2]/input[1]', \"beifan\")\n        # 强制等待\n        wd.sleep(2)\n        wd.click('//strong[text()=\"beifan\"]')\n        # 所在城市:\n        wd.click('//*[@id=\"citys_box\"]/div[1]/div[2]/input[3]')\n    \n        # input(\"开启调试：\")\n        # 分类:\n        wd.select('/html/body/div[2]/form/table[1]/tbody/tr[8]/td[2]/select', '|--信用认证标')\n        # 担保机构\n        wd.select('/html/body/div[2]/form/table[1]/tbody/tr[9]/td[2]/select', \"担保机构01\")\n        # 担保范围\n        wd.select('/html/body/div[2]/form/table[1]/tbody/tr[10]/td[2]/select', \"无\")\n        # 文件上传\n        wd.click('/html/body/div[2]/form/table[1]/tbody/tr[14]/td[2]/span/div[1]/div/div/button')\n        wd.click('/html/body/div[6]/div[1]/div[2]/div/div[1]/ul/li[2]')\n        wd.input('//input[@type=\"file\"]', r'D:\\pythonProjectweb_232\\code.png')\n        wd.click('/html/body/div[6]/div[1]/div[3]/span[1]/input')\n        # 借款用途\n        wd.select('/html/body/div[2]/form/table[1]/tbody/tr[15]/td[2]/select', '个人消费')\n    \n        # 还款方式\n        wd.select('/html/body/div[2]/form/table[1]/tbody/tr[16]/td[2]/select', '到期还本息')\n        # 借款合同范本\n        wd.select('/html/body/div[2]/form/table[1]/tbody/tr[17]/td[2]/select', '付息还本合同范本【担保】')\n        # 转让合同范本\n        wd.select('/html/body/div[2]/form/table[1]/tbody/tr[18]/td[2]/select', '天天赢合作操盘协议')\n        # 借款金额\n        wd.clear('/html/body/div[2]/form/table[1]/tbody/tr[19]/td[2]/input')\n        wd.input('/html/body/div[2]/form/table[1]/tbody/tr[19]/td[2]/input', '500000')\n        # 借款保证金[第三方托管]:\n        wd.clear('/html/body/div[2]/form/table[1]/tbody/tr[20]/td[2]/input')\n        wd.input('/html/body/div[2]/form/table[1]/tbody/tr[20]/td[2]/input', '200000')\n        #  最低投标金额:\n        wd.clear('/html/body/div[2]/form/table[1]/tbody/tr[22]/td[2]/input')\n        wd.input('/html/body/div[2]/form/table[1]/tbody/tr[22]/td[2]/input', '100')\n        # frame子页面切换\n        wd.frame_enter('/html/body/div[2]/form/table[1]/tbody/tr[30]/td[2]/div/div/div[2]/iframe')\n        wd.input(\"/html/body\", \"66666666666666666666\")\n        wd.frame_exit()\n    \n        wd.frame_enter('//*[@id=\"main-frame\"]')\n        wd.input(\"/html/body\", \"7777777\")\n    \n        # 强制输入数据\n        wd.click('/html/body/div[2]/form/table[1]/tbody/tr[33]/td[2]/label[1]')\n        wd.js('//*[@id=\"start_time\"]', \"arguments[0].value='2023-06-12 21:56:58'\")\n    \n        # 新增\n        wd.click('/html/body/div[2]/form/table[6]/tbody/tr[2]/td[2]/input[4]')\n        wd.sleep(2)\n    \n>       wd.assert_text('//*[id=\"colorpickerField\"]', \"新增失败\")\n\ntests\\test_background.py:135: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ncommons\\kdt.py:64: in assert_text\n    el_text = self.get_text(loc)  # 页面中的文本实际结果提示信息\ncommons\\kdt.py:56: in get_text\n    text = self.wait(f)\ncommons\\kdt.py:13: in wait\n    return WebDriverWait(self.driver, 5).until(func)\nvenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:86: in until\n    value = method(self._driver)\ncommons\\kdt.py:48: in f\n    e = self.driver.find_element(By.XPATH, loc)\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:831: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002C52DF57070>\nresponse = {'status': 500, 'value': '{\"value\":{\"data\":{\"text\":\"请填写年利率\"},\"error\":\"unexpected alert open\",\"message\":\"unexpected ale...dInitThunk [0x76927D59+25]\\\\n\\\\tRtlInitializeExceptionChain [0x77AEB74B+107]\\\\n\\\\tRtlClearBits [0x77AEB6CF+191]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n>           raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\nE           selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: 请填写年利率\nE           Message: unexpected alert open: {Alert text : 请填写年利率}\nE             (Session info: chrome=114.0.5735.199)\nE           Stacktrace:\nE           Backtrace:\nE           \tGetHandleVerifier [0x00CDA813+48355]\nE           \t(No symbol) [0x00C6C4B1]\nE           \t(No symbol) [0x00B75358]\nE           \t(No symbol) [0x00BCCDAD]\nE           \t(No symbol) [0x00BBA536]\nE           \t(No symbol) [0x00B982DC]\nE           \t(No symbol) [0x00B993DD]\nE           \tGetHandleVerifier [0x00F3AABD+2539405]\nE           \tGetHandleVerifier [0x00F7A78F+2800735]\nE           \tGetHandleVerifier [0x00F7456C+2775612]\nE           \tGetHandleVerifier [0x00D651E0+616112]\nE           \t(No symbol) [0x00C75F8C]\nE           \t(No symbol) [0x00C72328]\nE           \t(No symbol) [0x00C7240B]\nE           \t(No symbol) [0x00C64FF7]\nE           \tBaseThreadInitThunk [0x76927D59+25]\nE           \tRtlInitializeExceptionChain [0x77AEB74B+107]\nE           \tRtlClearBits [0x77AEB6CF+191]\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:244: UnexpectedAlertPresentException"}, "start": 1688129802954, "stop": 1688129810500, "uuid": "657fc321-0a5a-4a77-bc4c-066116c38ca1", "historyId": "0ff6e0691ef2d7ac72f71c5ca50d952e", "testCaseId": "0ff6e0691ef2d7ac72f71c5ca50d952e", "fullName": "tests.test_background#test_admin_new_deal_by_kdt", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_background"}, {"name": "host", "value": "ltq"}, {"name": "thread", "value": "32476-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_background"}]}